#setting mistakes to NA
countdata$BS4[countdata$Date == "26.03.2019" & countdata$Sample.ID2 == " BI_20_2"] <- NA
countdata$BS5[countdata$Date == "26.03.2019" & countdata$Sample.ID2 == " BI_20_2"] <- NA
countdata$Density_BS4 <- (countdata$BS4 / countdata$`Total.Volume..µL.`) * countdata$Dilution.Factor
countdata$Density_BS5 <- (countdata$BS5 / countdata$`Total.Volume..µL.`) * countdata$Dilution.Factor
return(countdata)
}) %>% do.call(rbind.data.frame, .)
countdataF <- bind_rows(countdataF,
data.frame(" B5_22_1", NA, NA, NA, NA,
"5", NA, NA, "02.04.2019", NA, NA) ,
data.frame(" B4_22_2", NA, NA, NA,  NA,
"4", NA, NA, "26.03.2019", NA, NA)
)
countdataF
data.frame(Sample.ID2 = " B5_22_1", Number.of.Events = NA, Dilution.Factor = NA, CellspML = NA, `Total.Volume..µL.` = NA,
Strain = "5", "BS4" = NA, BS5 = NA, Date = "02.04.2019", Density_BS4 = NA, Density_BS5 = NA)
countdataF <- map(.x = nms[which(!str_detect(nms, "Prelim"))], function(.x) {
touse <- meta_files_dataR[[.x]] %>%
dplyr::select(Sample.ID2, Number.of.Events, Dilution.Factor, CellspML, `Total.Volume..µL.`, Strain = Strain)
countdata <- cbind(touse,
cellcounts[[.x]],
Date = rep(.x, nrow(touse))
)
countdata$BS4[countdata$Strain == "5"] <- NA
countdata$BS5[countdata$Strain == "4"] <- NA
#setting mistakes to NA
countdata$BS4[countdata$Date == "26.03.2019" & countdata$Sample.ID2 == " BI_20_2"] <- NA
countdata$BS5[countdata$Date == "26.03.2019" & countdata$Sample.ID2 == " BI_20_2"] <- NA
countdata$Density_BS4 <- (countdata$BS4 / countdata$`Total.Volume..µL.`) * countdata$Dilution.Factor
countdata$Density_BS5 <- (countdata$BS5 / countdata$`Total.Volume..µL.`) * countdata$Dilution.Factor
return(countdata)
}) %>% do.call(rbind.data.frame, .)
### setting files omitted to NA
countdataF <- rbind(countdataF,
data.frame(Sample.ID2 = " B5_22_1", Number.of.Events = NA, Dilution.Factor = NA, CellspML = NA, `Total.Volume..µL.` = NA,
Strain = "5", "BS4" = NA, BS5 = NA, Date = "02.04.2019", Density_BS4 = NA, Density_BS5 = NA) ,
data.frame(Sample.ID2 = " B4_22_2", Number.of.Events = NA, Dilution.Factor = NA, CellspML = NA, `Total.Volume..µL.` = NA,
Strain = "4", BS4 = NA, BS5 = NA, Date = "26.03.2019", Density_BS4 = NA, Density_BS5 = NA)
)
countdataF
View(countdataF[,order(countdataF$Date) ])
View(countdataF[order(countdataF$Date),  ])
View(countdataF[order(countdataF$Date, countdataF$Sample.ID2),  ])
countdataF <- countdataF[order(countdataF$Date, countdataF$Sample.ID2),  ]
str_split(countdataF$Sample.ID2[1],  "_")
sapply(str_split(countdataF$Sample.ID2,  "_"), "[[", 2)
countdataF$Treatment <- sapply(str_split(countdataF$Sample.ID2,  "_"), "[[", 2)
countdataF$Replicate <- sapply(str_split(countdataF$Sample.ID2,  "_"), "[[", 3)
View(countdataF)
View(countdataF)
countdataF %>% dplyr::select() %>% ggplot(x = Date, color = Treatment) + geom_line(aes(y = log(Density_BS4)), lineetype = "dashed", size = 1.2) +
geom_line(aes(y = log(Density_BS5)), lineetype = "solid", size = 1.2) +
facet_grid(Strain ~ Replicate, scales = "free_y")
countdataF %>% dplyr::select() %>% ggplot(x = Date, color = Treatment) + geom_line(aes(y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(y = log(Density_BS5)), linetype = "solid", size = 1.2) +
facet_grid(Strain ~ Replicate, scales = "free_y")
countdataF %>% dplyr::select() %>% ggplot(x = Date, color = Treatment) + geom_line(aes(y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(y = log(Density_BS5)), linetype = "solid", size = 1.2)
countdataF %>% ggplot(x = Date, color = Treatment) + geom_line(aes(y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(y = log(Density_BS5)), linetype = "solid", size = 1.2)
countdataF %>% ggplot(x = Date, color = Treatment) + geom_line(aes(x = Datey = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2)
countdataF %>% ggplot(aes(x = Date, color = Treatment)) + geom_line(aes(x = Datey = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2)
countdataF %>% ggplot(aes(x = Date, color = Treatment)) + geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2)
countdataF %>% ggplot(aes(x = Date, color = Treatment)) + geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2) +
facet_grid(Strain ~ Replicate, scales = "free_y")
countdataF %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) + geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2)
countdataF %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) + geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2)+
facet_grid(Strain ~ Replicate, scales = "free_y")
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2) +
facet_grid(. ~ Replicate, scales = "free_y")
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2) +
facet_grid(. ~ Replicate, scales = "free_y") +
geom_point(aes(x = Date, y = log(Density_BS5)), size = 2)
View(countdataF)
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2)
facet_grid(Replicate ~ ., scales = "free_y")
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date, y = log(Density_BS4)), size = 2)
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date, y = log(Density_BS5)), size = 2)
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "solid", size = 1.2)
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date, y = log(Density_BS5)), size = 2)
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date, y = log(Density_BS5)), size = 2)
?as.Date
countdataF$Date2 <- as.Date(countdataF$Date, "%dd.%mm.%yyyy")
countdataF$Date2 <- as.Date(countdataF$Date, "%d.%m.%Y")
View(cellcounts)
View(countdataF)
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date, y = log(Density_BS4)), size = 2)
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 2)
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y")
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment))
nms
sort(nms)
countdataF$Date2 <- as.Date(countdataF$Date, "%d.%m.%Y")
countdataF <- countdataF[order(countdataF$Date2, countdataF$Sample.ID2),  ]
diff(countdataF$Date2)
diff(unique(countdataF$Date2))
cumsum(c(1, diff(unique(countdataF$Date2))))
table(countdataF$Sample.ID2)
table(countdataF$Date)
countdataF$Time <- rep(cumsum(c(1, diff(unique(countdataF$Date2)))), each = 27)
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 2)
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Time, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Time, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Time, y = log(Density_BS4)), size = 2)
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Time, group = Treatment, color = Treatment)) +
geom_line(aes(x = Time, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Time, y = log(Density_BS4)), size = 3)
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date, y = log(Density_BS5)), size = 2)
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 2)
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date, y = log(Density_BS5)), size = 2)
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 2)
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date, y = log(Density_BS4)), linetype = "solid", size = 1.2)
facet_grid(Replicate ~ ., scales = "free_y")
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2)
facet_grid(Replicate ~ ., scales = "free_y")
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2)
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date, y = log(Density_BS5)), size = 2)
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y")
?geom_point
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 20) +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5)
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 15)
?plot
?points
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 21)
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 23)
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 21) +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 23)
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19)
##BS5
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 18)
##Biculture
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 18)
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19)
##BS5
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5)
##Biculture
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5)
##BS4
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19)
##BS5
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5)
##Biculture
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5)
180*400
11.17*12
16.83*6
x <- c(0.4, 0.1, 0.3, 0.001, 0.99, 0.45, 0.5, 0.23, 0.14)
?dunif
x <- rbinom(15, 10, 0.34)
x
data.frame(dnorm(x), dunif(x, min = min(x), max = max(x)))
intersect(data.frame(dnorm(x), dunif(x, min = min(x), max = max(x))))
dd.test <- data.frame(dn = dnorm(x), du = dunif(x, min = min(x), max = max(x)))
intersect(dd.test$dn, dd.test$du)
dd.test <- data.frame(dn = dnorm(x), du = dunif(x, min = min(x), max = max(x)), dd = density(x)$y)
?density
dd.test <- data.frame(dn = dnorm(x), du = dunif(x, min = min(x), max = max(x)), dd = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$y)
dd.test
intersect(dd.test$dd, dd.test$du)
intersect(dd.test$dn, dd.test$du)
dd.test <- data.frame(dn = dnorm(x), du = dunif(x, min = min(x), max = max(x)), dd = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$y, db = dbinom(x, 10, 0.34))
dd.test
intersect(dd.test$dd, dd.test$db)
plot(x, dd.test$dd, type = "l")
x
dd.test$x <- x
plot(dd$x, dd.test$dd, type = "l")
plot(dd.test$x, dd.test$dd, type = "l")
plot(dd.test$x, dd.test$dd, type = "p")
dd.test <- data.frame(dn = dnorm(x), du = dunif(x, min = min(x), max = max(x)), dd = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$y, x_density = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$x, db = dbinom(x, 10, 0.34))
dd.test
x
x_density <- density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$x
dd.test <- data.frame(dn = dnorm(x_density), du = dunif(x_density, min = min(x_density), max = max(x_density)), dd = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$y, x_density = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$x, db = dbinom(x_density, 10, 0.34))
warnings()
dd.test <- data.frame(dn = dnorm(x_density), du = dunif(x_density, min = min(x_density), max = max(x_density)), dd = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$y, x_density = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$x, db = dbinom(x, 10, 0.34))
plot(dd.test$x_density, dd.test$dd, type = "p")
plot(dd.test$x_density, dd.test$dd, type = "l")
lines(dd.test$x_density, dd.test$db, type = "l", col = 2)
points(dd.test$x_density, dd.test$db, type = "p", col = 2)
points(dd.test$x, dd.test$db, type = "p", col = 3)
dd.test
dd.test <- data.frame(dn = dnorm(x_density), du = dunif(x_density, min = min(x_density), max = max(x_density)), dd = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$y, x_density = density(x, n = 15, from = min(x), to = max(x), bw = "SJ")$x, db = dbinom(x, 10, 0.34),x = x)
plot(dd.test$x_density, dd.test$dd, type = "l")
points(dd.test$x, dd.test$db, type = "p", col = 3)
intersect(dd.test$db, dd.test$dd)
intersect(round(dd.test$db, 2), round(dd.test$dd, 2))
sapply(dd.test, sum)
which(dd.test$dn > 0)
which(dd.test$dn > 0E-3)
0E-3
which(dd.test$dn > 1.0E-3)
##BS4
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) + ggtitle("BS4 Curves")
##BS5
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5) + ggtitle("BS5 Curves")
##Biculture
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5) + + ggtitle("BS4 (Solid), BS5 (Dashed) Curves")
##BS4
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) + ggtitle("BS4 Curves")
##BS5
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5) + ggtitle("BS5 Curves")
##Biculture
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5) + + ggtitle("BS4 (Solid) BS5 (Dashed) Curves")
##BS4
countdataF %>% dplyr::filter(Strain == "4") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) + ggtitle("BS4 Curves")
##BS5
countdataF %>% dplyr::filter(Strain == "5") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5) + ggtitle("BS5 Curves")
##Biculture
countdataF %>% dplyr::filter(Strain == "BI") %>% ggplot(aes(x = Date2, group = Treatment, color = Treatment)) +
geom_line(aes(x = Date2, y = log(Density_BS5)), linetype = "dashed", size = 1.2) +
geom_line(aes(x = Date2, y = log(Density_BS4)), linetype = "solid", size = 1.2) +
facet_grid(Replicate ~ ., scales = "free_y") +
geom_point(aes(x = Date2, y = log(Density_BS4)), size = 3, shape = 19) +
geom_point(aes(x = Date2, y = log(Density_BS5)), size = 3, shape = 5) + ggtitle("BS4 (Solid) BS5 (Dashed) Curves")
library(flowCore)
library(flowDensity)
library(tidyverse)
library(stringr)
knitr::opts_chunk$set(echo = TRUE, message = F, warning = F)
#source("Functions/distances.R")
source("../../cyanoFilter/R/good_measurement.R")
source("../../cyanoFilter/R/retain.R")
source("../../cyanoFilter/R/lnTrans.R")
source("../../cyanoFilter/R/nona.R")
source("../../cyanoFilter/R/noneg.R")
source("../../cyanoFilter/R/plotting_functions.R")
#source("../../cyanoFilter/R/cell_debris.R")
source("../../cyanoFilter/R/cell_gating.R")
source("../../cyanoFilter/R/debris_nc.R")
source("../../cyanoFilter/R/debris_c.R")
source("../../cyanoFilter/R/good_measurement.R")
source("../../cyanoFilter/R/retain.R")
source("../../cyanoFilter/R/lnTrans.R")
source("../../cyanoFilter/R/nona.R")
source("../../cyanoFilter/R/noneg.R")
source("../../cyanoFilter/R/plotting_functions.R")
#source("../../cyanoFilter/R/cell_debris.R")
source("../../cyanoFilter/R/cell_gating.R")
source("../../cyanoFilter/R/debris_nc.R")
source("../../cyanoFilter/R/bs4_nc.R")
source("../../cyanoFilter/R/debris_invasion_nc.R")
source("../../cyanoFilter/R/bs5_nc.R")
source("../../cyanoFilter/R/bs5_invasion_nc.R")
source("../../cyanoFilter/R/Margin_Cells.R")
#list all folders in the Cytometer Data folder
metafiles <- list.dirs("../Cytometer Data")
nms <- sapply(str_split(metafiles[2:length(metafiles)], "/"), "[[", 3)
#reading in all meta data file and determining their status
meta_files_data <- lapply(metafiles[2:length(metafiles)], function(x) {
inside <- list.files(x, full.names = T)
#all csv files without the word GroupStats
csv.ext <- which(tools::file_ext(inside) == "csv" &
!str_detect(inside, "GroupStats"))
csv.toberead <- inside[csv.ext]
if(length(csv.ext) == 1) {
metadata <- read.csv(csv.toberead, skip = 7,
stringsAsFactors = F,
check.names = T)
metadata <- metadata[, 1:65]
#clean up the Cells.muL column
names(metadata)[which(str_detect(names(metadata), "Cells."))] <- "CellspML"
first_names <- sapply(str_split(metadata$Sample.ID, "_"), "[[", 1)
metadata$Strain <- str_extract(first_names, "[4-5]")
metadata$Strain[is.na(metadata$Strain)] <- "BI"
metadata$Status <- goodfcs(metadata, mxd_cellpML = 1000, mnd_cellpML = 50)
id_names <- lapply(str_split(metadata$Sample.ID, "_"), function(x) {
nms <- ifelse(length(x) < 3, paste(x[1], x[2], sep = "_"),
paste(x[1], x[2], x[3], sep = "_"))
})
metadata$Sample.ID2 <- unlist(id_names)
metadata$File <- 1
} else if (length(csv.ext) > 1) {
metadatas <- lapply(1:length(csv.toberead), function(i) {
ddata <- read.csv(csv.toberead[i], skip = 7, stringsAsFactors = F, check.names = T)
ddata <- ddata[, 1:65]
ddata$File <- i
return(ddata)
})
metadata <- do.call(rbind.data.frame, metadatas)
names(metadata)[which(str_detect(names(metadata), "Cells."))] <- "CellspML"
first_names <- sapply(str_split(metadata$Sample.ID, "_"), "[[", 1)
metadata$Strain <- str_extract(first_names, "[4-5]")
metadata$Strain[is.na(metadata$Strain)] <- "BI"
metadata$Status <- goodfcs(metadata, mxd_cellpML = 1000, mnd_cellpML = 50)
id_names <- lapply(str_split(metadata$Sample.ID, "_"), function(x) {
nms <- ifelse(length(x) < 3, paste(x[1], x[2], sep = "_"),
paste(x[1], x[2], x[3], sep = "_"))
})
metadata$Sample.ID2 <- unlist(id_names)
}
return(metadata)
})
names(meta_files_data) <- nms
meta_files_data2 <- lapply(meta_files_data, function(y) {
broken <- y %>% dplyr::group_by(Sample.ID2) %>% tidyr::nest()
broken <- broken %>% mutate(data2 = purrr::map(data, function(.x) {
.x %>% dplyr::mutate(Retain = retain(.x, make_decision = "maxi"))
})
)
return(tidyr::unnest(broken, data2))
})
retain
head(meta_files_data$`02.04.2019`)
retain(meta_files_data$`02.04.2019`, make_decision = "maxi")
source("../../cyanoFilter/R/retain.R")
meta_files_data2 <- lapply(meta_files_data, function(y) {
broken <- y %>% dplyr::group_by(Sample.ID2) %>% tidyr::nest()
broken <- broken %>% mutate(data2 = purrr::map(data, function(.x) {
.x %>% dplyr::mutate(Retain = retain(.x, make_decision = "maxi"))
})
)
return(tidyr::unnest(broken, data2))
})
retain(meta_files_data$`02.04.2019`, make_decision = "maxi")
View(meta_files_data$`02.04.2019`)
source("../../cyanoFilter/R/retain.R")
retain(meta_files_data$`02.04.2019`, make_decision = "maxi")
meta_files_data2 <- lapply(meta_files_data, function(y) {
broken <- y %>% dplyr::group_by(Sample.ID2) %>% tidyr::nest()
broken <- broken %>% mutate(data2 = purrr::map(data, function(.x) {
.x %>% dplyr::mutate(Retain = retain(.x, make_decision = "maxi"))
})
)
return(tidyr::unnest(broken, data2))
})
View(meta_files_data$`02.04.2019`)
View(meta_files_data2$`02.04.2019`)
meta_files_data2 <- lapply(meta_files_data, function(y) {
broken <- y %>% dplyr::group_by(Sample.ID2) %>% tidyr::nest()
broken <- broken %>% mutate(data2 = purrr::map(data, function(.x) {
.x %>% dplyr::mutate(Retain = retain(.x, make_decision = "maxi"))
})
)
return(tidyr::unnest(broken, data2))
})
meta_files_dataR <- map(meta_files_data2, function(.y) {
Retained <- .y %>% dplyr::filter(Retain == "Retain")
})
fcs_files_data <- map2(.x = metafiles[2:length(metafiles)], .y = meta_files_dataR,
function(.x, .y) {
#Retained <- .y %>% dplyr::filter(Retain == "Retain")
inside <- list.files(.x, full.names = T)
fcs.ext <- which(tools::file_ext(inside) == "fcs" )
fcs.toberead <- inside[fcs.ext]
fcs.files <- lapply(1:nrow(.y), function(i) {
fcs_data <- read.FCS(fcs.toberead[.y$File[i]],
alter.names = TRUE,
transformation = FALSE,
emptyValue = FALSE,
dataset = .y$Sample.Number[i])
})
#keys <- sapply(fcs.files, keyword, "GTI$SAMPLEID")
names(fcs.files) <- .y$Sample.ID2
as(fcs.files, "flowSet")
})
names(fcs_files_data) <- nms
#pnames <- pData(phenoData(fcs_files_data$`02.04.2019`))
fcs_files_data$`02.04.2019`[[1]]
?write.FCS
write.FCS(fcs_files_data$`02.04.2019`[[1]], "C:/Users/lucp9544/Desktop/PhD/cyanoFilter/inst/extdata/text.fcs")
library(flowCore)
library(flowDensity)
library(tidyverse)
library(stringr)
library(cyanoFilter)
